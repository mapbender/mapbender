<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="mapbender.imageexport.service.class">Mapbender\PrintBundle\Component\ImageExportService</parameter>
        <parameter key="mapbender.imageexport.resource_dir">%kernel.project_dir%/config/MapbenderPrintBundle</parameter>
        <!-- leave temp dir at null to autodetect via sys_get_temp_dir(); use an explicit path if temp dir autodetect fails -->
        <parameter key="mapbender.imageexport.temp_dir">null</parameter>
        <parameter key="mapbender.imageexport.image_transport.service.class">Mapbender\PrintBundle\Component\Transport\ImageTransport</parameter>
        <!-- Buffer around individual WMS tiles requested in image export + print (pixel units). Up to this number of
             pixels will be thrown away on up to four edges. This avoids using portions of the image where label or
             other symbol placement may be influenced by what the WMS thinks is the total image dimensions
             (c.f. Mapserver's "partial" label rendering settings) -->
        <parameter key="mapbender.imageexport.renderer.wms.tile_buffer">512</parameter>
        <parameter key="mapbender.imageexport.renderer.wms.tile_buffer.x">%mapbender.imageexport.renderer.wms.tile_buffer%</parameter>
        <parameter key="mapbender.imageexport.renderer.wms.tile_buffer.y">%mapbender.imageexport.renderer.wms.tile_buffer%</parameter>
        <parameter key="mapbender.imageexport.renderer.geojson.class">Mapbender\PrintBundle\Component\LayerRendererGeoJson</parameter>
        <parameter key="mapbender.imageexport.renderer.markers.class">Mapbender\PrintBundle\Component\LayerRendererMarkers</parameter>
        <parameter key="mapbender.print.service.class">Mapbender\PrintBundle\Component\PrintService</parameter>
        <!-- print resource / temp dirs are by default == imageexport dirs, but can be changed independently -->
        <parameter key="mapbender.print.resource_dir">%mapbender.imageexport.resource_dir%</parameter>
        <parameter key="mapbender.print.temp_dir">%mapbender.imageexport.temp_dir%</parameter>
        <parameter key="mapbender.print.template_dir">%mapbender.print.resource_dir%/templates</parameter>
        <parameter key="mapbender.print.legend_handler.service.class">Mapbender\PrintBundle\Component\LegendHandler</parameter>
        <parameter key="mapbender.print.canvas_legend.class">Mapbender\PrintBundle\Component\CanvasLegend</parameter>
        <parameter key="mapbender.print.template_parser.service.class">Mapbender\PrintBundle\Component\OdgParser</parameter>
        <parameter key="mapbender.print_plugin_host.service.class">Mapbender\PrintBundle\Component\Service\PrintPluginHost</parameter>
        <parameter key="mapbender.print.plugin.digitizer.class">Mapbender\PrintBundle\Component\Plugin\DigitizerPrintPlugin</parameter>
        <parameter key="mapbender.print.plugin.queue.class">Mapbender\PrintBundle\Component\Plugin\PrintQueuePlugin</parameter>
        <!-- can only be activated safely if there is a cron job executing the queued jobs -->
        <parameter key="mapbender.print.queueable">false</parameter>
        <!-- Storage path can be anywhere, should probably be /var/ in proper LSB setups
             Storage in web is pre-standardization legacy behavior -->
        <parameter key="mapbender.print.queue.storage_dir">%kernel.project_dir%/public/prints</parameter>
        <!-- Queue load path is the same as storage_path by default, but can be set to some
             other value to support a "print queue server" installed separately from the browser-facing
             Mapbender install. This value will be used to retrieve the finished PDF when serving the
             open / download requests. Unlike storage_path, this can be set to a http url. -->
        <parameter key="mapbender.print.queue.load_path">%mapbender.print.queue.storage_dir%</parameter>
        <!-- Memory limit for jobs immediately executed in the web browser scope (not queued).
             Supports null to use existing php-configured value and avoid any attempt to change memory limit.
             Additionally supports formats understood by php.ini
             see http://php.net/manual/en/ini.core.php#ini.memory-limit
             see http://php.net/manual/en/faq.using.php#faq.using.shorthandbytes
             NOTE: this will never REDUCE memory limit vs a system configuration (php.ini etc), it only works upwards -->
        <parameter key="mapbender.print.memory_limit">null</parameter>
        <!-- Memory limit for execution of queued jobs. Supports any format understood by php.ini
             see http://php.net/manual/en/ini.core.php#ini.memory-limit
             see http://php.net/manual/en/faq.using.php#faq.using.shorthandbytes
             NOTE: this will never REDUCE memory limit vs a system configuration (php.ini etc), it only works upwards -->
        <parameter key="mapbender.print.queue.memory_limit">1G</parameter>
    </parameters>
    <services>
        <service id="mapbender.imageexport.service" class="%mapbender.imageexport.service.class%">
            <argument type="collection"><!-- layer renderers -->
                <argument key="GeoJSON+Style" type="service" id="mapbender.imageexport.renderer.geojson" />
                <argument key="markers" type="service" id="mapbender.imageexport.renderer.markers" />
            </argument>
            <argument type="service" id="logger" />
            <argument type="service" id="mapbender.source.typedirectory.service" />
        </service>
        <service id="mapbender.imageexport.image_transport.service" class="%mapbender.imageexport.image_transport.service.class%">
            <argument type="service" id="mapbender.http_transport.service" />
            <argument type="service" id="logger" />
        </service>
        <service id="mapbender.imageexport.renderer.markers" class="%mapbender.imageexport.renderer.markers.class%">
            <argument>%kernel.project_dir%/public</argument>
        </service>
        <service id="mapbender.imageexport.renderer.geojson" class="%mapbender.imageexport.renderer.geojson.class%">
            <argument>%mapbender.imageexport.resource_dir%/fonts</argument>
            <argument type="service" id="mapbender.imageexport.renderer.markers" />
        </service>
        <service id="mapbender.print.service" class="%mapbender.print.service.class%">
            <argument type="collection"><!-- layer renderers -->
                <argument key="GeoJSON+Style" type="service" id="mapbender.imageexport.renderer.geojson" />
                <argument key="markers" type="service" id="mapbender.imageexport.renderer.markers" />
            </argument>
            <argument type="service" id="mapbender.imageexport.image_transport.service" />
            <argument type="service" id="mapbender.print.legend_handler.service" />
            <argument type="service" id="mapbender.print.template_parser.service" />
            <argument type="service" id="mapbender.print_plugin_host.service" />
            <argument type="service" id="mapbender.source.typedirectory.service" />
            <argument type="service" id="logger" />
            <argument type="service" id="Mapbender\CoreBundle\Component\Application\ApplicationResolver" />
            <argument>%mapbender.print.resource_dir%</argument>
            <argument>%mapbender.print.temp_dir%</argument>
        </service>
        <service id="mapbender.print.template_parser.service" class="%mapbender.print.template_parser.service.class%">
            <argument>%mapbender.print.template_dir%</argument>
        </service>
        <service id="mapbender.print.legend_handler.service" class="%mapbender.print.legend_handler.service.class%">
            <argument type="service" id="mapbender.imageexport.image_transport.service" />
            <argument>%mapbender.print.resource_dir%</argument>
            <argument>%mapbender.print.temp_dir%</argument>
            <argument>%mapbender.print.canvas_legend.class%</argument>
        </service>
        <service id="mapbender.print_plugin_host.service" class="%mapbender.print_plugin_host.service.class%">
        </service>
        <service id="mapbender.print.plugin.digitizer" class="%mapbender.print.plugin.digitizer.class%">
        </service>
        <service id="mapbender.print.plugin.queue" class="%mapbender.print.plugin.queue.class%">
            <argument type="service" id="doctrine.orm.default_entity_manager" />
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="router" />
            <argument type="service" id="filesystem" />
            <argument>%mapbender.print.queue.storage_dir%</argument>
            <argument>%mapbender.print.queue.load_path%</argument>
        </service>
        <service id="mapbender.form_type.element.printclient" class="Mapbender\PrintBundle\Element\Type\PrintClientAdminType">
            <argument>%mapbender.print.queueable%</argument>
            <tag name="form.type" />
        </service>
    </services>
</container>
