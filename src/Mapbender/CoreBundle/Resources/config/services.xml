<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="applications" type="collection" />
        <parameter key="signer.class">Mapbender\CoreBundle\Component\Signer</parameter>
        <parameter key="assetic.filter.scss.class">Assetic\Filter\ScssphpFilter</parameter>
        <parameter key="mapbender.http_transport.service.class">Mapbender\Component\Transport\OwsProxyTransport</parameter>
        <parameter key="mapbender.source.instancetunnel.service.class">Mapbender\CoreBundle\Component\Source\Tunnel\InstanceTunnelService</parameter>
        <parameter key="mapbender.presenter.application.config.service.class">Mapbender\CoreBundle\Component\Presenter\Application\ConfigService</parameter>
        <parameter key="mapbender.presenter.application.cache.class">Mapbender\CoreBundle\Component\Cache\ApplicationDataService</parameter>
        <!-- Application config caching disabled because we have identified some parts of the configuration may depend on current user
             Caching machinery can only be safely enabled after these cases have been adressed properly -->
        <parameter key="cachable.mapbender.application.config">false</parameter>
        <parameter key="mapbender.application.yaml_entity_repository.class">Mapbender\CoreBundle\Component\ApplicationYAMLMapper</parameter>
        <parameter key="mapbender.source.typedirectory.service.class">Mapbender\CoreBundle\Component\Source\TypeDirectoryService</parameter>
        <parameter key="mapbender.uploads_manager.service.class">Mapbender\CoreBundle\Component\UploadsManager</parameter>
        <parameter key="mapbender.application_importer.service.class">Mapbender\ManagerBundle\Component\ImportHandler</parameter>
        <parameter key="mapbender.application_exporter.service.class">Mapbender\ManagerBundle\Component\ExportHandler</parameter>
        <parameter key="mapbender.source.url_processor.service.class">Mapbender\CoreBundle\Component\Source\UrlProcessor</parameter>
        <parameter key="mapbender.sqlite_connection_listener.class">Mapbender\CoreBundle\Component\EventListener\SqliteConnectionListener</parameter>
        <parameter key="mapbender.application_template.fallback">Mapbender\CoreBundle\Template\Fullscreen</parameter>
        <!-- strict mode flag cascade; set mapbender.strict to true to enable all checks at once -->
        <parameter key="mapbender.strict">false</parameter>
        <parameter key="mapbender.strict.element_api">%mapbender.strict%</parameter>
        <parameter key="mapbender.strict.asset.bundle_scopes">%mapbender.strict%</parameter>
        <!-- Strict mode flags for processing of Yaml-defined applications -->
        <parameter key="mapbender.strict.static_app">%mapbender.strict%</parameter>
        <parameter key="mapbender.strict.static_app.elements">%mapbender.strict.static_app%</parameter>
        <parameter key="mapbender.strict.static_app.element_definition">%mapbender.strict.static_app.elements%</parameter>
        <parameter key="mapbender.strict.static_app.element_configuration">%mapbender.strict.static_app.element_definition%</parameter>
        <parameter key="owsproxy.baseroute">owsproxy3_core_owsproxy_entrypoint</parameter>
        <parameter key="mapbender.application_asset.service.class">Mapbender\CoreBundle\Asset\ApplicationAssetService</parameter>
        <parameter key="mapbender.asset_compiler.js.class">Mapbender\CoreBundle\Asset\JsCompiler</parameter>
        <parameter key="mapbender.asset_compiler.css.class">Mapbender\CoreBundle\Asset\CssCompiler</parameter>
        <parameter key="mapbender.asset_compiler.translations.class">Mapbender\CoreBundle\Asset\TranslationCompiler</parameter>
        <parameter key="mapbender.element_inventory.service.class">Mapbender\CoreBundle\Component\ElementInventoryService</parameter>
        <parameter key="mapbender.cookieconsent">false</parameter>
        <parameter key="mapbender.responsive">true</parameter>
        <parameter key="mapbender.responsive.elements">%mapbender.responsive%</parameter>
        <parameter key="mapbender.responsive.containers">%mapbender.responsive%</parameter>
        <parameter key="mapbender.yaml_application_dirs" type="collection">
            <parameter>%kernel.project_dir%/config/applications</parameter>
        </parameter>
        <parameter key="mapbender.disabled_elements" type="collection" />
        <parameter key="mapbender.uploads_dir">uploads</parameter>
        <parameter key="mapbender.manager.manager.login_template_class">Mapbender\ManagerBundle\Template\LoginTemplate</parameter>
        <parameter key="mapbender.manager.manager.template_class">Mapbender\ManagerBundle\Template\ManagerTemplate</parameter>
        <parameter key="mapbender.application.resolver.class">Mapbender\CoreBundle\Component\Application\DbAndYamlApplicationResolver</parameter>
    </parameters>

    <services>
        <service id="mapbender.application.yaml_entity_repository" class="%mapbender.application.yaml_entity_repository.class%" lazy="true">
            <argument>%applications%</argument>
            <argument type="service" id="mapbender.element_entity_factory" />
            <argument type="service" id="mapbender.source.typedirectory.service" />
            <argument type="service" id="mapbender.application_engine_listener" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>
        <service id="mapbender.twig.application" class="Mapbender\CoreBundle\Extension\ApplicationExtension">
            <tag name="twig.extension" />
            <argument type="service" id="mapbender.uploads_manager.service" />
            <argument type="service" id="assets._default_package" />
        </service>
        <service id="mapbender.twig.element_class" class="Mapbender\CoreBundle\Extension\ElementExtension">
            <tag name="twig.extension"/>
            <argument type="service" id="mapbender.element_filter" />
        </service>
        <service id="mapbender.twig.form" class="Mapbender\CoreBundle\Extension\FormExtension">
            <tag name="twig.extension"/>
        </service>
        <service id="mapbender.twig.branding" class="Mapbender\CoreBundle\Extension\BrandingExtension">
            <tag name="twig.extension"/>
            <argument>%branding.login_backdrop%</argument>
        </service>
        <service id="mapbender.twig.element_markup" class="Mapbender\CoreBundle\Extension\ElementMarkupExtension">
            <tag name="twig.extension"/>
            <argument type="service" id="mapbender.renderer.element_markup" />
        </service>
        <service id="mapbender.twig.application_content" class="Mapbender\CoreBundle\Extension\ApplicationContentExtension">
            <tag name="twig.extension"/>
            <argument type="service" id="mapbender.renderer.application_markup" />
            <argument>%kernel.debug%</argument>
        </service>

        <service id="mapbender.twig.sitelinks" class="Mapbender\CoreBundle\Extension\SitelinksExtension">
            <tag name="twig.extension"/>
            <argument>%mapbender.sitelinks%</argument>
        </service>

        <service id="mapbender.form_type.simple_search_configuration_admin" class="Mapbender\CoreBundle\Element\Type\SimpleSearchAdminConfigurationType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="mapbender.form_type.map_admin" class="Mapbender\CoreBundle\Element\Type\MapAdminType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="mapbender.form_type.scale_display_admin" class="Mapbender\CoreBundle\Element\Type\ScaleDisplayAdminType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="mapbender.form_type.ruler_admin" class="Mapbender\CoreBundle\Element\Type\RulerAdminType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="mapbender.form_type.fileimport_admin" class="Mapbender\CoreBundle\Element\Type\DataUploadAdminType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="mapbender.form_type.paint" class="Mapbender\CoreBundle\Element\Type\PaintType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="mapbender.form_type.activity_indicator" class="Mapbender\CoreBundle\Element\Type\ActivityIndicatorAdminType">
            <tag name="form.type" />
            <argument type="service" id="translator" />
        </service>

        <service id="form.type.order_aware_multi_choice" class="Mapbender\CoreBundle\Form\Type\OrderAwareMultipleChoiceType">
            <tag name="form.type"/>
            <!-- arguments 1:1 for ChoiceType parent class constructor -->
            <argument type="service" id="form.choice_list_factory"/>
        </service>
        <service id="form.type.template.fullscreen.toolbar_settings" class="Mapbender\CoreBundle\Form\Type\Template\Fullscreen\ToolbarSettingsType">
            <tag name="form.type" />
            <argument>%mapbender.responsive.containers%</argument>
        </service>
        <service id="form.type.template.sidepane_settings" class="Mapbender\CoreBundle\Form\Type\Template\Fullscreen\SidepaneSettingsType">
            <tag name="form.type" />
            <argument type="service" id="translator"/>
            <argument>%mapbender.responsive.containers%</argument>
        </service>
        <service id="mb.coordsutility.form.srslist" class="Mapbender\CoreBundle\Element\Type\CoordinatesUtilitySrsListType" >
            <tag name="form.type" />
            <argument type="service" id="router" />
        </service>

        <service id="signer" class="%signer.class%">
            <argument>%env(APP_SECRET)%</argument>
        </service>

        <service id="get_set_method_normalizer" class="Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer">
            <tag name="serializer.normalizer" />
        </service>

        <service id="twig.extension.stringloader" class="Twig\Extension\StringLoaderExtension">
            <tag name="twig.extension" />
        </service>

        <service id="mapbender.twig.core.number" class="Mapbender\CoreBundle\Extension\Twig\NumberExtension">
            <tag name="twig.extension"/>
            <argument type="service" id="request_stack" />
        </service>

        <service id="mapbender.assetic.filter.sass"
                 class="%assetic.filter.scss.class%"
                 lazy="true">
            <call method="addImportPath">
                <argument>%kernel.project_dir%/mapbender/src/Mapbender/CoreBundle/Resources/public/sass</argument>
            </call>
            <call method="addImportPath">
                <argument>%kernel.project_dir%/public</argument>
            </call>
        </service>

        <service id="mapbender.validator.css" class="Mapbender\CoreBundle\Validator\Constraints\ScssValidator">
            <argument type="service" id="mapbender.asset_compiler.css" />
            <tag name="validator.constraint_validator" alias="mapbender.validator.css" />
        </service>

        <service id="mapbender.source.instancetunnel.service" class="%mapbender.source.instancetunnel.service.class%" lazy="true">
            <argument type="service" id="mapbender.http_transport.service" />
            <argument type="service" id="router" />
            <argument type="service" id="mapbender.source.typedirectory.service" />
            <argument type="service" id="security.token_storage" />
            <argument type="service" id="Doctrine\ORM\EntityManagerInterface" />
        </service>

        <service id="mapbender.http_transport.service" class="%mapbender.http_transport.service.class%">
            <argument type="service" id="owsproxy.http_foundation_client" />
        </service>

        <service id="mapbender.presenter.application.config.service"
                 class="%mapbender.presenter.application.config.service.class%"
                 lazy="true">
            <argument type="service" id="event_dispatcher" />
            <argument type="service" id="mapbender.element_filter" />
            <argument type="service" id="mapbender.source.typedirectory.service" />
            <argument type="service" id="mapbender.source.url_processor.service" />
            <argument type="service" id="router" />
            <argument type="service" id="assets._default_package" />
            <argument type="service" id="translator" />
            <argument>%kernel.debug%</argument>
        </service>
        <service id="mapbender.source.typedirectory.service" class="%mapbender.source.typedirectory.service.class%">
            <argument>%sources%</argument>
        </service>
        <service id="mapbender.source.url_processor.service" class="%mapbender.source.url_processor.service.class%">
            <argument type="service" id="router" />
            <argument type="service" id="signer" />
            <argument type="service" id="mapbender.source.instancetunnel.service" />
            <argument>%owsproxy.baseroute%</argument>
        </service>
        <service id="mapbender.uploads_manager.service" class="%mapbender.uploads_manager.service.class%">
            <argument type="service" id="filesystem" />
            <argument>%kernel.project_dir%/public</argument>
            <argument>%mapbender.uploads_dir%</argument>
        </service>
        <service id="mapbender.application_importer.service" class="%mapbender.application_importer.service.class%">
            <argument type="service" id="Doctrine\ORM\EntityManagerInterface" />
            <argument type="service" id="mapbender.element_filter" />
            <argument type="service" id="mapbender.application_exporter.service" />
            <argument type="service" id="mapbender.uploads_manager.service" />
            <argument type="service" id="fom.security.permission_manager" />
        </service>
        <service id="mapbender.application_exporter.service" class="%mapbender.application_exporter.service.class%">
            <argument type="service" id="Doctrine\ORM\EntityManagerInterface" />
        </service>
        <service id="mapbender.presenter.application.cache" class="%mapbender.presenter.application.cache.class%">
            <argument type="service" id="logger" />
            <argument type="service" id="mapbender.presenter.application.cache.backend" />
            <argument>%container.compilation_timestamp_float%</argument>
        </service>
        <service id="mapbender.presenter.application.cache.backend"
                 alias="mapbender.cache.backend" />
        <service id="mapbender.asset_compiler.css"
                 class="%mapbender.asset_compiler.css.class%"
                 lazy="true">
            <argument type="service" id="file_locator" />
            <argument type="service" id="logger" />
            <argument>%kernel.project_dir%/public</argument>
            <argument>%kernel.bundles%</argument>
            <argument type="service" id="mapbender.assetic.filter.sass" />
            <argument type="service" id="router" />
        </service>
        <service id="mapbender.asset_compiler.js"
                 class="%mapbender.asset_compiler.js.class%"
                 lazy="true">
            <argument type="service" id="file_locator" />
            <argument type="service" id="logger" />
            <argument>%kernel.project_dir%/public</argument>
            <argument>%kernel.bundles%</argument>
        </service>
        <service id="mapbender.asset_compiler.translations"
                 class="%mapbender.asset_compiler.translations.class%"
                 lazy="true">
            <argument type="service" id="translator" />
            <argument type="service" id="twig" />
            <argument>%fallback_locale%</argument>
        </service>
        <service id="mapbender.application_asset.overrides.service"
                 class="Mapbender\CoreBundle\Asset\ApplicationAssetOverrides"
                 lazy="true"
                 public="true">
            <argument>%mapbender.asset_overrides%</argument>
        </service>
        <service id="mapbender.application_asset.service"
                 class="%mapbender.application_asset.service.class%"
                 lazy="true"
                 public="true">
            <argument type="service" id="mapbender.asset_compiler.css" />
            <argument type="service" id="mapbender.asset_compiler.js" />
            <argument type="service" id="mapbender.asset_compiler.translations" />
            <argument type="service" id="mapbender.element_filter" />
            <argument type="service" id="mapbender.element_inventory.service" />
            <argument type="service" id="mapbender.source.typedirectory.service" />
            <argument type="service" id="mapbender.application_template_registry" />
            <argument type="service" id="mapbender.application_asset.overrides.service" />
            <argument>%kernel.debug%</argument>
            <argument>%mapbender.strict.asset.bundle_scopes%</argument>
        </service>
        <service id="mapbender.xmlvalidator.service" class="Mapbender\CoreBundle\Component\XmlValidatorService">
            <argument type="service" id="mapbender.http_transport.service" />
            <argument>%kernel.project_dir%/public/xmlschemas</argument>
            <argument type="service" id="logger" on-invalid="null" />
        </service>
        <service id="mapbender.element_inventory.service" class="%mapbender.element_inventory.service.class%">
            <!-- NOTE: base Element class availability is not an argument, but added via compiler passes; this is not configurable -->
            <argument>%mapbender.disabled_elements%</argument>
        </service>
        <service id="mapbender.icon_package_fa4" class="Mapbender\CoreBundle\Component\IconPackageFa4">
            <argument>%mapbender.icons.disable_default_fa%</argument>
            <argument>%mapbender.icons.custom%</argument>
            <tag name="mapbender.icon_package" priority="-1" />
        </service>
        <service id="mapbender.icon_package_mbicons" class="Mapbender\CoreBundle\Component\IconPackageMbIcons">
            <argument>%mapbender.icons.disable_default%</argument>
            <tag name="mapbender.icon_package" priority="-2" />
        </service>
        <service id="mapbender.sqlite_connection_listener" class="%mapbender.sqlite_connection_listener.class%">
            <tag name="doctrine.middleware" />
            <tag name="kernel.event_listener" event="console.command" />
        </service>
        <service id="Mapbender\CoreBundle\Component\SQLSearchEngine" class="Mapbender\CoreBundle\Component\SQLSearchEngine" public="true">
            <argument type="service" id="logger" />
            <argument type="service" id="doctrine" />
        </service>
        <service id="mapbender.init_db_handler.epsg_update" class="Mapbender\CoreBundle\EventHandler\InitDb\UpdateEpsgHandler">
            <argument type="service" id="Doctrine\ORM\EntityManagerInterface" />
            <tag name="kernel.event_subscriber" />
        </service>
        <service id="mapbender.init_db_handler.fix_element_weights" class="Mapbender\CoreBundle\EventHandler\InitDb\FixElementWeightsHandler">
            <tag name="kernel.event_subscriber" />
            <argument type="service" id="Doctrine\ORM\EntityManagerInterface" />
        </service>

        <service id="Mapbender\CoreBundle\Component\Application\ApplicationResolver" class="%mapbender.application.resolver.class%">
            <argument type="service" id="mapbender.application.yaml_entity_repository" />
            <argument type="service" id="Doctrine\ORM\EntityManagerInterface" />
            <argument type="service" id="security.authorization_checker" />
        </service>

        <service id="mapbender.application.resolver" alias="Mapbender\CoreBundle\Component\Application\ApplicationResolver" />

    </services>
</container>
